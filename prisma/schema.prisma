// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum CostumerType {
  VAREJO
  MERCADO
}

model Customer {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  clientCod    String
  client       String
  name         String
  register     String  @unique
  phone        String
  ddd          String
  email        String?
  zipCode      String
  address      String
  city         String
  neighborhood String
  // type         CostumerType
  Sale         Sale[]
}

model Sale {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  saleId      String
  customerId  String   @db.ObjectId
  totalWeight Float
  createdAt   DateTime @default(now())
  seller      String
  client      String

  customer Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
}

// model SKU {
//   id               String        @id @default(auto()) @map("_id") @db.ObjectId
//   description      String        @unique
//   code             String        @unique
//   unity            String?
//   unitsPerPack     Int?
//   barCode          String?
//   shortDescription String        @unique
//   shelfLife        Int
//   weight           Float
//   Stock            Stock[]
//   productSold      productSold[]
// }

// model Stock {
//   id             String   @id @default(auto()) @map("_id") @db.ObjectId
//   productId      String   @db.ObjectId
//   available      Int
//   CreatedAt      DateTime @default(now())
//   productionDate DateTime
//   expirationDate DateTime
//   shelfLife      Int

//   sku SKU @relation(fields: [productId], references: [id], onDelete: Cascade)
// }

// model productSold {
//   id          String @id @default(auto()) @map("_id") @db.ObjectId
//   skuId       String @db.ObjectId
//   amount      Int
//   totalWeight Float

//   sku SKU @relation(fields: [skuId], references: [id], onDelete: Cascade)
// }

// model Sale {
//   id               String @id @default(auto()) @map("_id") @db.ObjectId
//   saleCode         String
//   customerId       String @db.ObjectId
//   paymentCondition String
//   paymentMethod    String
// }
